@{ ViewData["Title"] = "Generate Changelog";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    var projectId = ViewData["ProjectId"] as int?; }
<link rel="stylesheet"
      href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.1.0/styles/default.min.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.1.0/highlight.min.js"></script>
<link href="~/css/Shared/quill/quillsnow.css" rel="stylesheet">
<!-- Main Quill library -->
<script src="//cdn.quilljs.com/1.3.6/quill.js"></script>
<script src="//cdn.quilljs.com/1.3.6/quill.min.js"></script>
<!-- end of sidebar element -->
<!-- main-content declaration -->

<div id="ChangelogInput">
    <div class="row  card-layout" style="margin-bottom: 10px;">
        <div class="col-md-12">
            <!-- Basic Card Layout  -->
            <div tabindex="0" class="e-card" id="basic_card">
                <div class="e-card-header">
                    Changelog generation
                </div>
                <div class="e-card-content">
                    <div class="row">
                        <div class="content-wrapper">
                            <div id="Grid"></div>
                        </div>
                    </div>

                    <div class="row">
                        <button id="saveGenerated" onclick="GenerateChangelog()" style="width: 100%;"> Generate Changelog from closed work items</button>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="row  card-layout" style="margin-bottom: 10px;">
        <div class="col-md-12">
            <!-- Basic Card Layout  -->
            <div tabindex="0" class="e-card" id="basic_card">
                <div class="e-card-header">
                    Manually fill up a changelog
                </div>
                <div class="e-card-content">
                    <div class="row">
                        <div class="position-relative form-group" style="width:100%;"><div name="Description" id="Description" class="form-control"></div></div>
                    </div>
                    <div class="row">
                        <button id="saveCustom" onclick="ManualChangelog()" style="width: 100%;"> Save changelog to collection</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<div id="Confirm" hidden>
    <div class="row  card-layout" style="margin-bottom: 10px;">
        <div class="col-md-12">
            <!-- Basic Card Layout  -->
            <div tabindex="0" class="e-card" id="basic_card">
                <div class="e-card-header">
                    Manually fill up a changelog
                </div>
                <div class="e-card-content" style="padding:6%">
                    <div class="row">
                        <div id="ChangelogContent"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <button id="confirmBtn" onclick="ConfirmChangelog()" style="width: 100%;">Confirm</button>
                        </div>
                        <div class="col-md-6">
                            <button id="cancelBtn" onclick="CancelChangelog()" style="width: 100%;">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>


<script>
    var  Description = new Quill('#Description', {
        theme: 'snow'
    });
    var currentGrid;
    var selectedRecords = [];
    var saveCustom = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
    saveCustom.appendTo('#saveCustom');
    var saveGenerated = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
    saveGenerated.appendTo('#saveGenerated');
    var confirmBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
    confirmBtn.appendTo('#confirmBtn');
    var cancelBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
    cancelBtn.appendTo('#cancelBtn');

    $.ajax({
        type: 'GET',
        url: '/Changelog/UnassociatedChangelogItems?projectId=@projectId',
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (response) {
            //console.log(response);
            LoadWorkItems(response);
        //    grid.appendTo('#WorkItemsGrid');
        },
        error: function (xhr, status, error) {
            console.log(xhr);
        }
    });
    function LoadWorkItems(data)
    {
        currentGrid = new ej.grids.Grid({
                dataSource: data,
                allowSelection: true,
                filterSettings: { type: 'Menu' },
                selectionSettings: { persistSelection: true, type: "Multiple" },
                enableHover: false,
                columns: [
                    { type: "checkbox", field: "", allowFiltering: false, allowSorting: false, width: '60' },
                    { field: 'id', headerText: 'Identifier', width: 30 },
                    { field: 'workItemTypeName', headerText: 'Type', width: 60 },
                    { field: 'name', headerText: 'Name', width: 180 },

                ],
         });
        currentGrid.appendTo('#Grid');
    }




    function GenerateChangelog()
    {
        var selectedIndexes = currentGrid.getSelectedRowIndexes()
        for (var index in selectedIndexes) {
            var item = currentGrid.dataSource[index];
             selectedRecords.push(item);
        }

        var dto = {
            "Items":  selectedRecords

        }
        //console.log(dto);
        $.ajax({
            type: 'POST',
            url: '/Changelog/GenerateChangelog',
            data: JSON.stringify(dto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
               // window.location.href = "/Dashboard/Index";
               $("#ChangelogInput").hide();
               $("#ChangelogContent").html(response.chagelog);
               $("#Confirm").show();
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }

    function ManualChangelog()
    {
        var  content = $("#Description").children()[0].innerHTML;
        $("#ChangelogInput").hide();
        $("#ChangelogContent").html(content);
        $("#Confirm").show();
    }

    function ConfirmChangelog()
    {
        //console.log($("#ChangelogContent").html());
          var dto = {
            "Items": selectedRecords,
            "Chagelog": ""+$("#ChangelogContent").html(),
            "projectId" : @projectId
        }
        //console.log(dto);
        $.ajax({
            type: 'POST',
            url: '/Changelog/ConfirmChangelog',
            data: JSON.stringify(dto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                alert("Changelog generated!!!");
                window.location.href = "/Changelog/ViewChangelogs?projectId=@projectId";
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }

    function CancelChangelog()
    {
        $("#ChangelogInput").show();
        $("#ChangelogContent").html("");
        $("#Confirm").hide();
    }
</script>