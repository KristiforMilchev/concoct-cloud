@{
    ViewData["Title"] = "New Work Item";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    var result = ViewData["UserAccounts"] as List<UserAccounts>;
    var ProjectId = ViewData["ProjectId"] as int?;
    var accessPolicy = ViewData["SignupPolicy"] as int?;
    var publicSignupUrl = ViewData["PublicUrl"] as string;  

}

<link href="https://cdn.syncfusion.com/ej2/ej2-base/styles/material.css" rel="stylesheet" type="text/css" />
<link href="https://cdn.syncfusion.com/ej2/ej2-layouts/styles/material.css" rel="stylesheet" type="text/css" />
     <div id="spinner">
            <div id="loader"></div>
        </div>
        <div id="Content" hidden>
        <div class="row">
            <div class="col-md-12">
                <div class="main-card mb-3 card">
                    <div class="card-body text-center">
                    <div class="row">
                        <h3>User Account Managment</h3>
                    </div>
                    <div class="row">
                            <button onclick="CallUrl('/Accounts/ManageProjectMemebers?projectId=@ProjectId')" id="AddNewMember" style="width: 100%;" ><span class="glyphicon glyphicon-file"></span> Add New User</button>
                    </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="control-section">
                <div class="content-wrapper" id="GridHolder">
                    <div id="Grid"></div>        
                </div>
            </div>
        </div>
        <div class="row">
            <div onclick="EnablePublicSignUp()">
                <label for="publicCheck"  style="padding: 10px 70px 10px 0; position:relative; z-index:-12;">Make sign up public</label>
                <input id="publicCheck" type="checkbox" style="position: relative; z-index: -12;"   />
                <p id="GeneratedLink">@publicSignupUrl</p>
            </div>
        </div>
     </div>
 
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

<script>

    var signupPolicy = false;
    if (@accessPolicy == 1) {
        signupPolicy = true;
    }
    var publicCheck = new ejs.buttons.Switch({ checked: signupPolicy});
    publicCheck.appendTo('#publicCheck');
    //publicCheck.element.nextElementSibling.setAttribute("style", "Position:relative;z-index:-12;");
    //publicCheck.element.nextElementSibling.children[0].setAttribute("style", "Position:relative;z-index:-12;");
    //publicCheck.element.nextElementSibling.children[1].setAttribute("style", "Position:relative;z-index:-12;");
    var getParent = document.getElementsByClassName("e-switch-wrapper e-wrapper");
    getParent[0].setAttribute("style", "position:relative; z-index:-12");
    var selectedDeleteId;
    $( document ).ready(function()
    {
        var AddNewMember = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        AddNewMember.appendTo('#AddNewMember');
        GetAccountsData();

    });

    function GetAccountsData()
    {
        ShowLoader();
         $.ajax({
            type: 'GET',
            url: '/Authenication/GetManagmentUsers?projectId=@ProjectId',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                LoadAccounts(response);
            },
            error: function (xhr, status, error) {

            }
        });
    }

    function LoadAccounts(data){
        $("#GridHolder").html("");
        $("#GridHolder").html("<div id=\"Grid\"></div>");

        var grid = new ej.grids.Grid({
            dataSource: data,
            editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true, allowEditOnDblClick: false },
            beginEdit : EditClicked,

            actionBegin: ActionComplete,
             columns: [
                { field: 'name', headerText: 'Name', width: 120, textAlign: 'Right' },
                { field: 'email', headerText: 'Email', width: 150 },
                { field: 'type', headerText: 'Account Type', width: 130, format: 'yMd', textAlign: 'Right' },
                { field: 'createdAt', headerText: 'Created At', width: 130, format: 'yMd', textAlign: 'Right' },
                { headerText: 'Manage Records', width: 160,
                commands:
                    [
                        { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' }, click: EditClicked },
                        { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' }, click: DeleteClicked },

                    ]
                }
            ]
        });
        grid.appendTo('#Grid');
        ShowContent();
    }
    function EditClicked(args){
        //console.log(args);
        window.location.href="/Dashboard/EditAccount?id="+args.rowData.accountId+"&&projectId="+@ProjectId;
    }
    function ActionComplete(args){
        ////console.log(args);
        if(args.requestType == "delete")
        {
            selectedDeleteId = args.data[0].accountId;
            ShowLoader();
            DeleteClicked();
        }
    }

    function DeleteClicked()
    {
            var dto = {
                "AccountId" : selectedDeleteId,
                "ProjectId" : @ProjectId
            }
            $.ajax({
            type: 'POST',
                url: '/Accounts/DeleteProjectAccount',
                data: JSON.stringify(dto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    GetAccountsData();
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
    }
  
    function EnablePublicSignUp() {
        publicCheck.click();
        MakeSignUpPublic();
    }

    function MakeSignUpPublic() {
        var test = publicCheck.element;
        var isChecked;
        
        if (publicCheck.properties.checked === true) {
            isChecked = 1;
        }
        else {
            isChecked = 0;
        }
           


          var incomingSprintDTO =
        {
            "ProjectId": @ProjectId,
            "isChecked": isChecked
        }

        $.ajax({
            type: 'POST',
            url: '/Accounts/MakeSignupPublic',
            data: JSON.stringify(incomingSprintDTO),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(response) {
                $("#GeneratedLink").html(response.data);
            },
            error: function(xhr, status, error) {
             }
        });
     }


    function CallUrl(url)
    {
        window.location.href=url;
    }
</script>