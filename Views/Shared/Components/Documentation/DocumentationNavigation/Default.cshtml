@{
    var ProjectId = ViewData["ProjectId"] as int?;
    var defaultIteration = ViewData["DefaultIteration"] as int?;
    var CurrentUser = ViewData["User"];
    var UserRights = ViewData["UserRights"]as UserRights;

}

<style>
    
    .DocumentationRemoveIcon:before{
        content:'\e7fc';
        font-family: e-icons;
        padding:3px;
        font-size: 13px;
    }
    .ChatChannelIcon:before {
        content: '\eb4c';
        font-family: e-icons;
        padding: 3px;
        font-size: 13px;
    }
    .TreeNewItem:before{
        padding:3px;
        content:'\e7f9';
        font-family: e-icons;
        font-size: 13px;
    }
    .CategoryIcon:before {
        padding: 3px;
        content: '\e89e';
        font-family: e-icons;
        font-size: 13px;
    }
    .CategoryIcon:hover{
        color:rgb(230, 50, 111);
    }
    .TreeNewItem:hover{
        color:rgb(230, 50, 111);
    }
    .DocumentationRemoveIcon:hover{
        color:rgb(230, 50, 111);
        cursor: pointer;
    }
    .ChatChannelIcon:hover{
        color:rgb(230, 50, 111);
        
    }
    #documentation-treeview .e-list-parent .e-ul
    {
        padding: 0;
        margin:  0;
    } 
    #documentation-treeview .e-text-content
    {
        padding: 0;
    }

    #documentation-treeview  .e-text-content
    {
        text-align: initial;
    }
    #documentation-treeview .e-list-text
    {
        width: 80%;
    }
    #documentation-treeview  .e-gridheader
    {
        height:0px;
        display: none;
    }

    #documentation-treeview .e-treecell
    {
        width: 100%;
    }
    .nodetext{
        font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
        padding: 2%;
        font-size: 16px;
        text-align: left;
        padding-left: 5px;
        cursor: pointer;
    }
    .nodetext:hover{
        background-color: #fff;
        border-color: #000;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.22);
    }
    .nodetextHeading{
        cursor: pointer;
    }
     .nodetextHeading:hover{
        background-color: #fff;
        border-color: #000;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.22);
    }
    .nodetextHeading
    {
        font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
        padding: 2%;
        font-size: 18px;
        text-align: left;
    }
    .e-icons .e-treegridexpand
    {
        display: block;
    }
    #documentation-treeview_gridcontrol_content_table{
        overflow:hidden;
    }
</style>
<div class="row" style="margin:0;">
    <div id="DocumentationTreeViewHolder">
        @* <ul id="documentation-treeview" style="margin: 0; padding: 0;">
        </ul> *@
                <div id="documentation-treeview" style="width:96%"></div>
    </div>
</div>


@if(UserRights != null && UserRights.Documentation == 1)
{
    <script id="DocumentationGridRow" type="text/x-template" >
        <tr id="ChatChannelRow_${isParent}_${internalId}" >
            <td>
            ${if(isParent)}
                <div class="nodetextHeading" id="rowCat_${internalId}"  onclick="Expand(${internalId})">
                    <div class="row" style="padding:5px; margin:0;" >
                        <div class="col-md-9">
                            <span class="CategoryIcon"></span><span class="ChatTreeMainText">${nodeText}</span>
                        </div>
                        <div class="col-md-2" style="display: contents;">
                            <span onclick="AddNewCategoryField(2,${internalId})" class="TreeNewItem"></span>
                            <span onclick="DeleteDocCategory(${internalId})" class="DocumentationRemoveIcon"></span>

                        </div>
                    </div>
                </div>   
            ${else}
                <div class="nodetext" id="ChatChannel_${internalId}" onclick="OpenChannel(${internalId})">
                    <div class="row">
                        <div class="col-md-9">
                            <span class="ChatChannelIcon" style="padding-left:20px;"></span> <span class="ChatTreeMainText" >${nodeText}</span>
                        </div>
                        <div class="col-md-2"   >
                            <span onclick="DeleteCategoryField(${internalId})" class="DocumentationRemoveIcon"></span>
                        </div>
                    </div>
                </div>
            ${/if}
            </td>
        </tr>
    </script>
}
else
{
    <script id="DocumentationGridRow" type="text/x-template" >
        <tr id="ChatChannelRow_${isParent}_${internalId}" >
            <td>
            ${if(isParent)}
                <div class="nodetextHeading"  onclick="Expand(${internalId})">
                    <div class="row" style="padding:5px; margin:0;" >
                        <div class="col-md-12">
                            <span class="CategoryIcon"></span><span class="ChatTreeMainText">${nodeText}</span>
                        </div>
                    </div>
                </div>   
            ${else}
                <div class="nodetext" id="ChatChannel_${internalId}" onclick="OpenChannel(${internalId})">
                    <span class="ChatChannelIcon" style="padding-left:20px;"></span> <span class="ChatTreeMainText" >${nodeText}</span>
                </div>
            ${/if}
            </td>
        </tr>
    </script>
}

<script>
var LastDataSource;
var DocumentationNavigation;
$( document ).ready(function() {
    var dtoNotifications = {
        "ProjectId": @ProjectId,
         
    }
    $.ajax({
        type: 'POST',
        url: '/Documentation/GetNavigation',
        data: JSON.stringify(dtoNotifications),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (response) {
            InitializeChatItems(response);
        },
        error: function (xhr, status, error) {
            console.log(error);
        }
    }); 
});
 
    function DeleteCategoryField(id)
    {
        //console.log(id);
        $("#ChatChannelRow_undefined_"+id).hide();
        var dto = 
        {
            "Id":id
        }   
        $.ajax({
            type: 'POST',
            url: '/Documentation/DeleteCategoryField',
            data: JSON.stringify(dto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        }); 
    }

    function DeleteDocCategory(id)
    {
        Expand(id);
        $("#ChatChannelRow_true_"+id).hide();
        var dto = 
        {
            "Id":id
        }   
        $.ajax({
            type: 'POST',
            url: '/Documentation/DeleteCategory',
            data: JSON.stringify(dto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        }); 
    }
    var URL = location.href.replace(location.search, '');
    
     
    function InitializeChatItems(incomingData)
    {
        $("#DocumentationTreeViewHolder").html("");
        $("#DocumentationTreeViewHolder").html("<div id=\"documentation-treeview\"></div>");
 
        //console.log(incomingData);
        LastDataSource = incomingData;
        DocumentationNavigation = new ej.treegrid.TreeGrid({
            dataSource: incomingData,
            childMapping: 'nodeChild',
            treeColumnIndex: 0,
            rowSelected :Expand,
            rowTemplate:'#DocumentationGridRow',
            allowPaging: false,
            rowHeight: 83,
            columns: [
                { field: 'nodeText',  width: 220 },
              
            ]
        });
        DocumentationNavigation.appendTo('#documentation-treeview');
    }
     
    function OpenChannel(id)
    {
        $("#BreadCrumbHolder").html("");
        $("#DocumentationPageControl").html("");
        $("#DocumentationPageControl").load('/Documentation/DocumentationPage?id='+id+'&&projectId=@ProjectId');
        $("#BreadCrumbHolder").load("/Documentation/GetBreadcrum?id="+id+"&&projectId=@ProjectId");

        
    }
    function Expand(args)
    {
        
        LastDataSource.forEach(x => {
             
            var expand =false;
            if (x.internalId === args && x.isExpand === 1)
            {
                x.isExpand = 0;
                expand = false;
            }
            else if (x.internalId === args && x.isExpand === 0)
            {
                x.isExpand = 1;
                expand = true;
            }
            
            x.nodeChild.forEach(y=>{
                if(y.parentId === args)
                {
                    if(expand)
                    {
                        
                        $("#ChatChannelRow_undefined_"+y.internalId).show();
                    }
                    else
                    {
                      
                        $("#ChatChannelRow_undefined_"+y.internalId).hide();
                    }
                }
           });
        });
        @* DocumentationNavigation.collapseRow(id); *@
    }
</script>