@{
    var UserId = ViewData["UserId"] as int?;
    var Notifications = ViewData["Notificiations"] as List<Platform.Models.BindingNotification>;
    var ProjectId = ViewData["ProjectId"] as int?;
}

<style type="text/css" class="cssStyles">

  
    .PM:before {
        font-family: "e-icons" !important;
        content: '\e75e';
        color: #1f818c;
        width: 30px;
        height: 30px;
        font-size: 22px;
    }
    .AI:before {
        font-family: "e-icons" !important;
        content: '\e315';
        color: #1f248c;
        width: 30px;
        height: 30px;
        font-size: 22px;
    }
    .CW:before {
        font-family: "e-icons" !important;
        content: '\e30d';
        color: #4e8c1f;
        width: 30px;
        height: 30px;
        font-size: 22px;
    }
    .UW:before {
        font-family: "e-icons" !important;
        content: '\e93c';
        color: #1f8c71;
        font-size: 22px;
    }
    .CloseBtn:before {
        font-family: "e-icons" !important;
        content: '\ea7f';
        color: #bd1e33;
        font-size: 20px;
    }
    .CloseBtn:hover {
        font-family: "e-icons" !important;
        content: '\ea7f';
        color: #1c86c8;
        font-size: 20px;
    }
    
    .photo img {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0,0,0,0.2);
    }
    
    @@media screen and (max-width: 600px) and (min-width: 320px) {
        .photo img {
            width: 50px;
            height: 50px;
        }
    }
    
    @@media screen and (max-width: 800px) and (min-width: 600px) {
        .photo img {
            width: 70px;
            height: 70px;
        }
    }
    
    .photo,
    .details {
        border-color: #e0e0e0;
        border-style: solid;
    }
    
    .photo {
        border-width: 1px 0px 0px 0px;
        text-align: center;
        width: 50px;
    }
    
    .details {
        border-width: 1px 0px 0px 0px;
    }

    .e-bigger .details {
        padding-left: 25px;
    }

    .e-device .details {
        padding-left: 8px;
    }
    
    .details > table {
        width: 100%;
    }
    
    .CardHeader {
        font-weight: 600;
    }
    
 
     .rowHover{
         border-bottom: 1px solid #ffffff;
         cursor: pointer;
     }
     .rowHover:hover{
        border-bottom: 1.5px solid #e3165b;
        transition: border-bottom 1.2s linear;
        cursor: pointer;
     }

.e-grid .e-gridheader  {
  background-color: #fff;
  border-bottom-color: #e0e0e0;
  border-top-color: #e0e0e0;
  color: rgba(0, 0, 0, 0.54);
  padding: 0 !important;

}

  
</style>
<script id="currentTemplate" type="text/x-template">
    <tr id="ID_${id}" >
        <td class="photo">
            <span class="${notificationTypeNavigation.icon}">

            </span>
        </td>
        <td class="details">
            <table class="CardTable">
               
                <tbody class="rowHover">  
                    
                    <tr>
                        <td style="text-align:justify; max-width:85px;"> ${content} </td>
                        <td style="text-align:center;"><span onclick="RemoveNotification(${id})" class="CloseBtn"></span></td>

                    </tr>
                </tbody>
            </table>
        </td>
    </tr>
</script>
 
        <div  id="NotificationGridWrapper">
            <div id="NotificationHolderGrid" style="padding:0px;"></div>
        </div>
        



<script>

    var toasts = [];
    var toastObj;
    var dto = {
        "ProjectId": @ProjectId
        
    }
    //console.log(dto);
    $.ajax({
        type: 'POST',
        url: '/Notification/GetUserNotifications',
        data: JSON.stringify(dto),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (response) {
             
            InitiliazeNotificationGrid(response);
        },
        error: function (xhr, status, error) {
            console.log(error);
        }
    });

    function InitiliazeNotificationGrid(data)
    {
        $("#NotificationGridWrapper").html("");
        $("#NotificationGridWrapper").html("<div id=\"NotificationHolderGrid\"></div>");
        var grid = new ej.grids.Grid({
            dataSource: data,
            rowTemplate: '#currentTemplate',
            height: $("#sidebar-treeview").height,
            width: 'auto',
            columns: [
                { headerText: 'Type', textAlign: 'Center', field: 'notificationTypeNavigation.notificationType' },
                { headerText: 'Notification Content', field: 'content', textAlign: 'Left' }
            ]
        });
        grid.appendTo('#NotificationHolderGrid');
    }


    function RemoveNotification(id)
    {
        //console.log(id);
        $("#ID_"+id).remove();
        var countA =  $("#NotificationCount").html();
        var newCount = parseInt(countA) -1;
        $("#NotificationCount").html(newCount);
        var dto = {
            "Id": id,
            "ProjectId":@ProjectId
            
        }
        $.ajax({
        type: 'POST',
            url: '/Notification/NotificationRead',
            data: JSON.stringify(dto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }
</script>