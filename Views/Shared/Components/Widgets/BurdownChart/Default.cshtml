@{
    var  ProjectId = ViewData["ProjectId"] as int?;
    var BindingData = ViewData["ChartBindingData"] as IncomingBurndownChartSetting;
    var chars = "abcdefghijklmnopqrstuvwxyz0123456789";
    var random = new System.Random();
    var assignedLetter =chars[random.Next(chars.Length-1)];
    var customId  =  $"AssignedChart_{assignedLetter}";
}




<div class="control-section">
    <div id="@customId" align="center"></div>
</div>
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
<script>

var dto = {
    "Title" :  '@BindingData.Title',
    "ProjectId": @BindingData.ProjectId,
    "Dashboard" : @BindingData.Dashboard,
    "ViewComponentId": @BindingData.ViewComponentId,
    "BacklogBindingType" : '@BindingData.BacklogBindingType',
    "BacklogSelectedType" : '@BindingData.BacklogSelectedType',
    "WorkItemTypeSelected" : '@BindingData.WorkItemTypeSelected',
    "CountWItemSelected" : '@BindingData.CountWItemSelected',
    "SumWItemSelected" : '@BindingData.SumWItemSelected',
    "BurndownOnSelect" : '@BindingData.BurndownOnSelect'
}
//console.log(dto);
$.ajax({
    type: 'POST',
    url: '/Widget/GetBurndownChartData',
    data: JSON.stringify(dto),
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    success: function (response) {
        //console.log(response);
        InitilizeBurdownChart(response);
    },
    error: function (xhr, status, error) {
        console.log(error);
    }
}); 
@* InitilizeBurdownChart(); *@
function InitilizeBurdownChart(data)
{

     var customId = new ej.charts.Chart({
        //Initializing Primary X Axis
        primaryXAxis: {
            title: 'by dates',
            interval: 1,
            labelIntersectAction: 'Rotate45',
            valueType: 'Category',
            majorGridLines: { width: 0 }, minorGridLines: { width: 0 },
            majorTickLines: { width: 0 }, minorTickLines: { width: 0 },
            lineStyle: { width: 0 },
        },
        //Initializing Primary Y Axis
        primaryYAxis: {
            title: 'burndown',
            minimum: -3,
            maximum: 3,
            interval: 1,
            lineStyle: { width: 0 },
            majorTickLines: { width: 0 }, majorGridLines: { width: 1 },
            minorGridLines: { width: 1 }, minorTickLines: { width: 0 },
            labelFormat: '{value}B',
        },
        chartArea: {
            border: {
                width: 0
            }
        },
        //Initializing Chart Series
        series: [
            {
                type: 'StackingColumn',
                dataSource: data,
                xName: 'x', yName: 'y', name: 'Private Consumption',
            },{
                type: 'Line',
                dataSource: data,
                xName: 'x', yName: 'y', name: 'Burndown rate',
                width: 2,
                marker: {
                    visible: true,
                    width: 10,
                    height: 10
                },
            }
        ],
        width: ej.base.Browser.isDevice ? '100%' : '60%',
        //Initializing Chart Title
        title: ' ',
        //Initializing Tooltip
        tooltip: {
            enable: true
        },

    });
    customId.appendTo('#@customId');

}
</script>
