@{
    ViewData["Title"] = "Commits";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    var result = ViewData["Projects"] as List<Projects>;
    var userName =  ViewData["Name"] as string;
    var ProjectId = ViewData["ProjectId"];
    var Branches = ViewData["Branches"] as List<Branches>;
}
  <!-- end of sidebar element -->
 
<!-- main-content declaration -->
<div class="main-content" id="main-text" style="height: 94vh;">
    <div class="sidebar-content">
        <div class="container">
            <div class="row">
                <div class="control-wrapper" style="width:100%">

                    <select id="branches"> 
                    @{
                        foreach(var branch in Branches){
                                <option value="@branch.Id">@branch.BranchName</option>
                        }
                    }
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="main-card mb-3 card">
                        <div class="control-section">
                            <div class="content-wrapper" id="GridHolder">
                                <div id="Grid"></div>        
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
 
<script src="~/Syncfusion/ej2/dist/ej2.min.js"></script>


<script>
    var commitGrid;
    $( document ).ready(function() 
    {

    
        var listObj = new ej.dropdowns.DropDownList({
            // set the index value to select an item based on index at initial rendering
            index: 1,
            // set the placeholder to DropDownList input element
            placeholder: 'Select a branch',
            // set the height of the popup element
            popupHeight: '200px',
            // bind the change event
            change:  BranchChanged
        });
        listObj.appendTo('#branches');
      
        $.ajax({
            type: 'GET',
            url: '/Commit/GetCommits?projectId=@ProjectId&branchId=0',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                LoadCommitGrid(response);
            },
            error: function (xhr, status, error) {
    
            }
        });
        
    });

    function LoadCommitGrid(data)
    {
         
        $("#GridHolder").html("");
        $("#GridHolder").html("<div id=\"Grid\"></div>");
        commitGrid = new ej.grids.Grid({
            allowSelection: true,
           
           // editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true, allowEditOnDblClick: false },
             columns: [
                { field: 'commitKey', headerText: 'Commit Key', width: 120, textAlign: 'Right' },
                { field: 'message', headerText: 'Message', width: 150 },
                { field: 'author', headerText: 'Author', width: 130,  textAlign: 'Right' },
                { field: 'date', headerText: 'Date', width: 130, format: 'yMd', textAlign: 'Right' },
                { field: 'pullRequest', headerText: 'PullRequest', width: 130, textAlign: 'Right' },

            ]
        });
        commitGrid.appendTo('#Grid');
    }

    // call the change event's function after initialized the component.
    function BranchChanged(args) {
         $.ajax({
            type: 'GET',
            url: '/Commit/GetCommits?projectId=@ProjectId&branchId='+args.value,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                LoadCommitGrid(response);
            },
            error: function (xhr, status, error) {
    
            }
        });
    }
 
</script>